name: Runs examples1

on:
  workflow_call:
    inputs:
      BUILT_EARTHLY_PATH:
        required: true
        type: string
      BUILD_EARTHLY_TARGET:
        required: true
        type: string
      BUILD_EARTHLY_ARGS:
        required: false
        type: string
        default: "--use-inline-cache"
      BINARY:
        required: true
        type: string
      SUDO:
        type: string
        required: false
      RUNS_ON:
        required: true
        type: string
      EXAMPLE_NAME:
        required: true
        type: string
      USE_SATELLITE:
        required: false
        type: boolean
        default: false
      SATELLITE_NAME:
        required: false
        type: string
      EARTHLY_ORG:
        required: false
        type: string


jobs:
  example:
    name: ${{inputs.EXAMPLE_NAME}}-${{inputs.RUNS_ON}}-${{inputs.binary}}
    runs-on: ${{inputs.RUNS_ON}}
    env:
      FORCE_COLOR: 1
      EARTHLY_TOKEN: "${{ secrets.EARTHLY_TOKEN }}"
      EARTHLY_INSTALL_ID: "earthly-githubactions"
      EARTHLY_ORG: "${{inputs.EARTHLY_ORG}}"
      DOCKERHUB_MIRROR_USERNAME: "${{ secrets.DOCKERHUB_MIRROR_USERNAME }}"
      DOCKERHUB_MIRROR_PASSWORD: "${{ secrets.DOCKERHUB_MIRROR_PASSWORD }}"
      # Used in our github action as the token - TODO: look to change it into an input
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: earthly/actions-setup@main
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
        if: inputs.BINARY == 'docker'
      - name: remove docker
        run: ${{inputs.SUDO}} apt-get purge docker-engine docker docker.io docker-ce docker-ce-cli ; ${{inputs.SUDO}} rm -rf /usr/bin/docker
        if: inputs.binary == 'podman'
      - name: Install Podman (with apt-get)
        run: ${{inputs.SUDO}} apt-get update && ${{inputs.SUDO}} apt-get install -y podman && ${{inputs.SUDO}} rm -f /etc/containers/registries.conf
        if: inputs.binary == 'podman'
      - name: Podman debug info
        run: podman version && podman info && podman info --debug
        if: inputs.binary == 'podman'
      - name: Install QEMU for Podman multi-arch building
        # qemu-user-static needed for cross-compilation (--platform) targets
        run: ${{inputs.SUDO}} apt-get update && ${{inputs.SUDO}} apt-get install -y qemu-user-static
        if: inputs.BINARY == 'podman'
      - name: Configure Satellites (Earthly Only)
        run: earthly sat ls && earthly satellite select ${{inputs.SATELLITE_NAME}}
        if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) && inputs.USE_SATELLITE
      - name: Docker mirror login via ${{inputs.BINARY}} (Earthly Only)
        run: ${{inputs.SUDO}} ${{inputs.BINARY}} login registry-1.docker.io.mirror.corp.earthly.dev --username "${{ secrets.DOCKERHUB_MIRROR_USERNAME }}" --password "${{ secrets.DOCKERHUB_MIRROR_PASSWORD }}"
        if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      - name: Configure Earthly to use mirror (Earthly Only)
        run: |-
          earthly config global.buildkit_additional_config "'[registry.\"docker.io\"]

          mirrors = [\"registry-1.docker.io.mirror.corp.earthly.dev\"]'"
        if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository
      - name: Docker Login (main build)
        run: ${{inputs.SUDO}} ${{inputs.BINARY}} login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password "${{ secrets.DOCKERHUB_TOKEN }}"
        if: github.event_name == 'push'
      - name: Link Earthly dir to Earthly dev dir
        run: mkdir -p ~/.earthly && ln -s ~/.earthly ~/.earthly-dev
      - name: Build latest earthly using released earthly
        run: ${{inputs.SUDO}} $(which earthly) ${{inputs.BUILD_EARTHLY_ARGS}} ${{inputs.BUILD_EARTHLY_TARGET}}
      - name: Set EARTHLY_VERSION_FLAG_OVERRIDES env
        run: |-
          set -euo pipefail
          EARTHLY_VERSION_FLAG_OVERRIDES="$(tr -d '\n' < .earthly_version_flag_overrides)"
          echo "EARTHLY_VERSION_FLAG_OVERRIDES=$EARTHLY_VERSION_FLAG_OVERRIDES" >> "$GITHUB_ENV"
      - name: Build ${{inputs.EXAMPLE_NAME}} (PR build)
        run: ${{inputs.SUDO}} ${{inputs.BUILT_EARTHLY_PATH}} --ci -P ${{inputs.EXAMPLE_NAME}}
        if: github.event_name != 'push'
      - name: Build ${{inputs.EXAMPLE_NAME}} (main build)
        run: ${{inputs.SUDO}} ${{inputs.BUILT_EARTHLY_PATH}} --ci --push -P ${{inputs.EXAMPLE_NAME}}
        if: github.event_name == 'push'
      - name: Build and test multi-platform example
        run: |
          ${{inputs.SUDO}} ${{inputs.BUILT_EARTHLY_PATH}} ./examples/multiplatform+all
          ${{inputs.SUDO}} ${{inputs.BINARY}} run --rm earthly/examples:multiplatform_linux_arm64 | grep aarch64
      - name: Buildkit logs (runs on failure)
        run: ${{inputs.SUDO}} ${{inputs.BINARY}} logs earthly-buildkitd
        if: ${{ failure() }}
