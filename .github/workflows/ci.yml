name: GitHub Actions CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    name: +test +test-fail
    runs-on: windows-latest
    env:
      GIT_URL_INSTEAD_OF: "https://github.com/=git@github.com:"
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v2
      - name: Install Ubuntu
        run: |
          $url = "https://waterlan.home.xs4all.nl/dos2unix/dos2unix-7.4.1-win64.zip"
          $output = ".\dos2unix.zip"
          (New-Object System.Net.WebClient).DownloadFile($url, $output)
          Expand-Archive .\dos2unix.zip .\dos2unix

          $url = "https://aka.ms/wsl-ubuntu-1804"
          $output = ".\Ubuntu.zip"
          (New-Object System.Net.WebClient).DownloadFile($url, $output)
          Expand-Archive .\Ubuntu.zip .\Ubuntu
          Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
          .\Ubuntu\ubuntu1804.exe install --root

      - name: Install Docker
        shell: wsl bash --noprofile --norc -euo pipefail "$(script="$(wslpath '{0}')" && .\dos2unix\bin\dos2unix.exe -q "$script" && echo "$script")"
        run: |
          echo Install Docker pre-reqs
          apt-get update
          apt-get install -y apt-transport-https ca-certificates curl software-properties-common

          echo Add Docker repository
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
          apt-key fingerprint 0EBFCD88
          add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          echo Update
          apt-get update
          echo Install Docker
          apt install -y docker-ce docker-compose putty
          rm /c
          ln -s /mnt/c /c
          echo Done

      - name: Download released earth
        run: "(new-object System.Net.WebClient).DownloadFile('https://github.com/earthly/earthly/releases/latest/download/earth-linux-amd64','earth')"
        # run: "curl.exe -o earth https://github.com/earthly/earthly/releases/latest/download/earth-linux-amd64"
      - name: Build latest earth using released earth
        run: wsl -u root -d Ubuntu-18.04 -- ./earth +for-linux
      - name: Execute tests
        run: wsl -u root -d Ubuntu-18.04 -- ./build/linux/amd64/earth --no-output -P +test
      - name: Execute fail test
        run: "wsl -u root -d Ubuntu-18.04 -- ! ./build/linux/amd64/earth --no-output +test-fail"
  # misc-tests:
  #   name: ./examples/tests+private-image-test ./examples/tests+experimental
  #   runs-on: windows-latest
  #   env:
  #     GIT_URL_INSTEAD_OF: "https://github.com/=git@github.com:"
  #     FORCE_COLOR: 1
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download released earth
  #       run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earth-linux-amd64 -O /usr/local/bin/earth && chmod +x /usr/local/bin/earth'"
  #     - name: Build latest earth using released earth
  #       run: earth +for-linux
  #     - name: Execute experimental tests
  #       run: ./build/linux/amd64/earth --no-output -P ./examples/tests+experimental
  #     - name: Docker Login
  #       run: docker login --username vladaionescu --password "${{ secrets.DOCKERHUB_TOKEN }}"
  #       if: github.event.pull_request.head.repo.full_name == github.repository
  #     - name: Execute private image test
  #       run: ./build/linux/amd64/earth --no-output ./examples/tests+private-image-test
  #       if: github.event.pull_request.head.repo.full_name == github.repository
  # examples:
  #   name: +examples
  #   runs-on: windows-latest
  #   env:
  #     GIT_URL_INSTEAD_OF: "https://github.com/=git@github.com:"
  #     FORCE_COLOR: 1
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Download released earth
  #       run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earth-linux-amd64 -O /usr/local/bin/earth && chmod +x /usr/local/bin/earth'"
  #     - name: Build latest earth using released earth
  #       run: earth +for-linux
  #     - name: Build examples
  #       run: ./build/linux/amd64/earth --no-output +examples
  # push:
  #   name: --push +all
  #   if: github.event_name == 'push'
  #   needs: ["tests", "misc-tests", "examples"]
  #   runs-on: ubuntu-latest
  #   env:
  #     GIT_URL_INSTEAD_OF: "https://github.com/=git@github.com:"
  #     FORCE_COLOR: 1
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: "Put back the git branch into git (Earthly uses it for tagging)"
  #       run: |
  #         branch=""
  #         if [ -n "$GITHUB_HEAD_REF" ]; then
  #           branch="$GITHUB_HEAD_REF"
  #         else
  #           branch="${GITHUB_REF##*/}"
  #         fi
  #         git checkout -b "$branch" || true
  #     - name: Download released earth
  #       run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earth-linux-amd64 -O /usr/local/bin/earth && chmod +x /usr/local/bin/earth'"
  #     - name: Build latest earth using released earth
  #       run: earth +for-linux
  #     - name: Docker Login
  #       run: docker login --username vladaionescu --password "${{ secrets.DOCKERHUB_TOKEN }}"
  #     - name: "Reset cache (TODO: This can be removed after the next release)"
  #       run: ./build/linux/amd64/earth prune --reset
  #     - name: Rebuild and push
  #       run: ./build/linux/amd64/earth --push +all
  #     - name: Save earth
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: earth artifacts
  #         path: build
  #         if-no-files-found: error
