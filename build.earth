FROM golang:1.13-alpine3.11

RUN apk add --update --no-cache \
	openssl \
	ca-certificates \
	bash \
	bash-completion \
	util-linux \
	grep \
	less \
	binutils \
	findutils \
	coreutils \
	grep \
	less \
	git \
	g++ \
	curl \
	make

ENV GOCACHE=/go-cache
WORKDIR /earthly

deps:
	RUN go get golang.org/x/tools/cmd/goimports
	RUN go get golang.org/x/lint/golint
	COPY go.mod go.sum ./
	RUN go mod download
	SAVE ARTIFACT go.mod /go.mod AS LOCAL go.mod
	SAVE ARTIFACT go.sum /go.sum AS LOCAL go.sum
	SAVE IMAGE

code:
	FROM +deps
	COPY --dir buildcontext builder cleanup cmd conslogging dockertar domain \
		llbutil logging ./
	COPY --dir buildkitd/credpass buildkitd/buildkitd.go buildkitd/settings.go buildkitd/
	COPY --dir earthfile2llb/antlrhandler earthfile2llb/dedup earthfile2llb/image \
		earthfile2llb/variables earthfile2llb/*.go earthfile2llb/
	COPY ./earthfile2llb/parser+parser/*.go ./earthfile2llb/parser/
	SAVE IMAGE

lint:
	FROM +code
	RUN output="$(goimports -d .)" ; test -z "$output" || (echo "$output" && exit 1)
	RUN golint -set_exit_status .

earth:
	FROM +code
	ARG GOOS=linux
	ARG GOARCH=amd64
	ARG GO_EXTRA_LDFLAGS="-linkmode external -extldflags -static"
	RUN test -n "$GOOS" && test -n "$GOARCH"
	RUN \
		--mount=type=cache,target=/go-cache \
		go build \
			-ldflags "$GO_EXTRA_LDFLAGS" \
			-o build/earth \
			cmd/earth/*.go
	SAVE ARTIFACT build/earth /earth AS LOCAL "build/$GOOS/$GOARCH/earth"

earth-all:
	BUILD +earth
	BUILD \
		--build-arg=GOOS=darwin \
		--build-arg=GOARCH=amd64 \
		--build-arg=GO_EXTRA_LDFLAGS= \
		+earth

earth-docker:
	FROM ./buildkitd+buildkitd
	RUN apk add --update --no-cache docker-cli
	ENV ENABLE_LOOP_DEVICE=false
	COPY earth-buildkitd-wrapper.sh /usr/bin/earth-buildkitd-wrapper.sh
	ENTRYPOINT ["/usr/bin/earth-buildkitd-wrapper.sh"]
	COPY +earth/earth /usr/bin/earth
	ARG EARTHLY_TARGET_TAG
	ARG TAG=$EARTHLY_TARGET_TAG
	SAVE IMAGE --push earthly/earth:$TAG

all:
	BUILD +earth-all
	BUILD +earth-docker
	BUILD ./buildkitd+buildkitd

test:
	BUILD +lint
	BUILD ./examples/tests+all

test-experimental:
	BUILD ./examples/tests+experimental

release:
	FROM node:13.10.1-alpine3.11
	RUN npm install -g github-release-cli
	WORKDIR /earthly
	COPY +earth/earth ./earth-linux-amd64
	COPY --build-arg=GOOS=darwin \
		--build-arg=GOARCH=amd64 \
		--build-arg=GO_EXTRA_LDFLAGS= \
		+earth/earth ./earth-darwin-amd64
	ARG RELEASE_TAG
	ARG BODY
	ARG EARTHLY_GIT_HASH
	RUN test -n "$RELEASE_TAG" && test -n "$EARTHLY_GIT_HASH"
	BUILD +test
	BUILD --build-arg TAG="$RELEASE_TAG" +earth-docker
	BUILD --build-arg TAG="$RELEASE_TAG" ./buildkitd+buildkitd
	BUILD --build-arg TAG=latest +earth-docker
	BUILD --build-arg TAG=latest ./buildkitd+buildkitd
	RUN --secret GITHUB_TOKEN=+secrets/GITHUB_TOKEN true
	RUN --push \
		--secret GITHUB_TOKEN=+secrets/GITHUB_TOKEN \
		github-release upload \
		--owner vladaionescu \
		--repo earthly \
		--commitish "$EARTHLY_GIT_HASH" \
		--tag "$RELEASE_TAG" \
		--name "$RELEASE_TAG" \
		--body "$BODY" \
		earth-linux-amd64 earth-darwin-amd64
